name: ci

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main, nautilus, nexus, injective, trump, ousdt]
  pull_request:
    branches: [main, nautilus, nexus, injective, trump, ousdt]
  merge_group:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('./yarn.lock') }}
      - name: yarn-install
        # Check out the lockfile from main, reinstall, and then
        # verify the lockfile matches what was committed.
        run: |
          yarn install
          CHANGES=$(git status -s)
          if [[ ! -z $CHANGES ]]; then
            echo "Changes found: $CHANGES"
            git diff
            exit 1
          fi

  build:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('./yarn.lock') }}
      - name: build
        run: yarn run build
        env:
          NEXT_PUBLIC_WALLET_CONNECT_ID: ${{ secrets.NEXT_PUBLIC_WALLET_CONNECT_ID }}

  prettier:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('./yarn.lock') }}
      - name: prettier
        run: |
          yarn run prettier
          CHANGES=$(git status -s)
          if [[ ! -z $CHANGES ]]; then
            echo "Changes found: $CHANGES"
            exit 1
          fi

  lint:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('./yarn.lock') }}
      - name: lint
        run: yarn run lint

  test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('./yarn.lock') }}
      - name: test
        run: yarn run test

  deploy:
    runs-on: ubuntu-latest
    needs:
      - install
      - prettier
      - lint
      - test
      - build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      - name: Extract branch name
        shell: bash
        run: |
          PR_NUMBER="${{ github.event.number }}"
          if [ -n "$PR_NUMBER" ]
          then
            echo "branch_name=pr-${PR_NUMBER}" >> $GITHUB_OUTPUT
            echo "url=https://pr-${PR_NUMBER}.${{ secrets.CF_BASE_URL }}.pages.dev" >> $GITHUB_OUTPUT
          else
            if [ "${{ github.ref }}" = "refs/heads/develop" ]
            then
              echo "branch_name=develop" >> $GITHUB_OUTPUT
              echo "url=https://develop.${{ secrets.CF_BASE_URL }}.pages.dev" >> $GITHUB_OUTPUT
            else
              echo "branch_name=" >> $GITHUB_OUTPUT
            fi
          fi

        id: extract_branch

      - name: Build
        run: |
          yarn
          yarn next-on-pages
          find .vercel/output/static -name "*.map" -print -exec rm {} \;
        env:
          NEXT_PUBLIC_WALLET_CONNECT_ID: ${{ secrets.NEXT_PUBLIC_WALLET_CONNECT_ID }}

      - name: 'Deploy release'
        if: ${{ steps.extract_branch.outputs.branch_name == '' }}
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: |
          yarn wrangler pages deploy --project-name "${{ secrets.CF_PROJECT_NAME }}" .vercel/output/static

      - name: Deploy ${{ steps.extract_branch.outputs.branch_name }} (PR)
        if: ${{ steps.extract_branch.outputs.branch_name != '' }}
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: |
          if ! yarn wrangler pages deploy --project-name "${{ secrets.CF_PROJECT_NAME }}" --branch "${{ steps.extract_branch.outputs.branch_name }}" .vercel/output/static > output.log
          then
            cat output.log
            exit 1
          fi
          sed < output.log -n 's#.*Take a peek over at \(.*\)$#specific_url=\1#p' >> $GITHUB_OUTPUT
        id: deploy

      - name: Create commit comment
        uses: mshick/add-pr-comment@v2
        if: ${{ steps.extract_branch.outputs.branch_name != '' }}
        with:
          message: |
            ### Deployed with **Cloudflare Pages** :cloud: :rocket: :ok:
            - **URL**: [${{ steps.extract_branch.outputs.url }}](${{ steps.extract_branch.outputs.url }})
            - **Specific**: [${{ steps.deploy.outputs.specific_url }}](${{ steps.deploy.outputs.specific_url }})